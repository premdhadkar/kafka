version: "3.5"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.1-1-ubi8
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - confluent
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: confluentinc/cp-server:7.1.1-1-ubi8
    container_name: kafka
    hostname: kafka
    networks:
      - confluent
    ports:
      - "9092:9092"
      - "9999:9999"
    volumes:
      - ./agents:/agents
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_SEGMENT_BYTES: 536870912
      KAFKA_LOG_RETENTION_BYTES: 536870912
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: 127.0.0.1
      KAFKA_OPTS: "-javaagent:/agents/jmx_prometheus_javaagent-0.12.0.jar=7071:/agents/kafka.yml"

  prometheus:
    image: prom/prometheus:v2.17.0
    container_name: prometheus
    hostname: prometheus
    networks:
      - confluent
    ports:
      - "9090:9090/tcp"
    volumes:
      - ./prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    hostname: grafana
    networks:
      - confluent
    ports:
      - "3000:3000/tcp"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

networks:
  confluent:

volumes:
  grafana-storage:
